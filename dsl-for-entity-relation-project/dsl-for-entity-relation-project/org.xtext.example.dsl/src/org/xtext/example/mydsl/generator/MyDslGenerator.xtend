/*
 * generated by Xtext 2.37.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.myDsl.Entity
import org.xtext.example.mydsl.myDsl.Attribute

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val fileName = resource.URI.trimFileExtension.lastSegment
		for (e : resource.allContents.toIterable.filter(Entity)) {
		    fsa.generateFile(fileName + "/" + e.name + ".java", e.compile)
		}
	}
	
	private def compile(Entity e) '''   
    public class «e.name.toFirstUpper» {
«««    	«FOR a : e.attributes»
«««            «a.compile»
«««        «ENDFOR»
    }
	'''
	
//	private def compile(Attribute a) '''
//    private «a.type» «a.name»;
//        
//    public «a.type» get«a.name.toFirstUpper»() {
//        return «a.name»;
//    }
//        
//    public void set«a.name.toFirstUpper»(«a.type» «a.name») {
//        this.«a.name» = «a.name»;
//    }
// '''
	
}
